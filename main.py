from aiogram import Bot, Dispatcher, executor, types
from config import Token, admin_ip
from db import Database
import keyboards as kb


bot = Bot(Token)
dp = Dispatcher(bot)
db = Database('dbras.db')

admin1 = -1


@dp.message_handler(commands=['addadmin'])
async def start(message: types.Message):
    global admin1
    if message.chat.type == 'private':
        if message.from_user.id == admin_ip:
            text1 = message.text[10:]
            if admin_ip == text1:
                await bot.send_message(message.from_user.id, '–ò–∑–≤–∏–Ω—Ç–µ, –Ω–æ —ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —É–∂–µ –∞–¥–º–∏–Ω!')
            else:
                if admin1 == -1:
                    admin1 = int(text1)
                    await bot.send_message(message.from_user.id, text1 + ' —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω')
                    await bot.send_message(text1, '–í—ã —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω')


@dp.message_handler(commands=['info'])
async def start(message: types.Message):
    if message.chat.type == 'private':
        await bot.send_message(message.from_user.id, '–Ø —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç, —Ä–∞—Å—Å—ã–ª–∞—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏—è :)')


@dp.message_handler(commands=['whoadmin'])
async def start(message: types.Message):
    global admin1
    if message.chat.type == 'private':
        if admin1 > -1:
            admins = str(admin_ip) + ' - –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω, ' + str(admin1) + ' - –æ–±—ã—á–Ω—ã–π –∞–¥–º–∏–Ω'
            await bot.send_message(message.from_user.id, admins)
        else:
            admins = str(admin_ip) + ' - –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω'
            await bot.send_message(message.from_user.id, admins)


@dp.message_handler(commands=['keyboard'])
async def ras(message: types.Message):
    global admin1
    if message.chat.type == 'private':
        if message.from_user.id == admin_ip or admin1 > -1 and message.from_user.id == admin1:
            await message.reply("admin panel", reply_markup=kb.markup3)
        else:
            await message.reply("–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞", reply_markup=kb.greet_kb1)


@dp.message_handler(commands=['sendall'])
async def ras(message: types.Message):
    global admin1
    if message.chat.type == 'private':
        if message.from_user.id == admin_ip or admin1 > -1 and message.from_user.id == admin1:
            text1 = message.text[9:]
            users = db.get_users()
            for row in users:
                user_ras = False
                try:
                    await bot.send_message(row[0], text1)
                    if int(row[1]) != 1:
                        db.set_active(row[0], 1)
                except:
                    db.set_active(row[0], 0)
            await bot.send_message(message.from_user.id, "–£—Å–ø–µ—à–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞")
            print('ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ' + str(message.from_user.id) + ', —Ä–∞–∑–æ—Å–ª–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: ' + str(text1))



@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    if message.chat.type == 'private':
        if not db.user_exists(message.from_user.id):
            db.add_user(message.from_user.id)
            print(str(message.from_user.id) + ' –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –±–æ—Ç—É')
            if message.from_user.id == admin_ip or admin1 > -1 and message.from_user.id == admin1:
                await message.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=kb.markup3)
            else:
                await message.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=kb.greet_kb)
        else:
            await bot.send_message(message.from_user.id, '–ú—ã —É–∂–µ –≤–∞—Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏, –Ω–µ –Ω—É–∂–Ω–æ –∂–º–∞—Ç—å —Å—é–¥–∞')
            if message.from_user.id == admin_ip or admin1 > -1 and message.from_user.id == admin1:
                await message.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=kb.markup3)
            else:
                await message.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=kb.greet_kb)


@dp.message_handler(content_types=['text'])
async def que(message: types.Message):
    if message.chat.type == 'private':
        if message.text == '–ù–∞–∑–∞–¥':
            if message.from_user.id == admin_ip or admin1 > -1 and message.from_user.id == admin1:
                await message.reply("–•–æ—Ä–æ—à–æ", reply_markup=kb.markup3)
            else:
                await message.reply("–•–æ—Ä–æ—à–æ", reply_markup=kb.greet_kb1)
        if message.text == '–ü—Ä–∏–≤–µ—Ç! üëã':
            if message.from_user.id == admin_ip or admin1 > -1 and message.from_user.id == admin1:
                await message.reply("–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç", reply_markup=kb.markup3)
            else:
                await message.reply("–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç", reply_markup=kb.greet_kb1)
        if message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–∞—Ö':
            if message.from_user.id == admin_ip:
                await message.reply("–°–µ–π—á–∞—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é", reply_markup=kb.markup3)
                await bot.send_message(message.from_user.id, '/sendall - —Ä–∞–∑–æ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–∫–æ–º–∞–Ω–¥–∞ + —Å–æ–æ–±—â–µ–Ω–∏–µ)')
                await bot.send_message(message.from_user.id, '/whoadmin - —É–∑–Ω–∞—Ç—å –∫—Ç–æ –∞–¥–º–∏–Ω')
                await bot.send_message(message.from_user.id, '/addadmin - –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞ (–º–∞–∫—Å. 1, –∫–æ–º–∞–Ω–¥–∞ + id)')
                await bot.send_message(message.from_user.id, '/deleteadmin - –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞ (–∫–æ–º–∞–Ω–¥–∞ + id)')
                await bot.send_message(message.from_user.id, '/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ')
                await bot.send_message(message.from_user.id, '/keyboard - –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞')
            elif message.from_user.id == admin1:
                await message.reply("–°–µ–π—á–∞—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é", reply_markup=kb.markup3)
                await bot.send_message(message.from_user.id, '/sendall - —Ä–∞–∑–æ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–∫–æ–º–∞–Ω–¥–∞ + —Å–æ–æ–±—â–µ–Ω–∏–µ)')
                await bot.send_message(message.from_user.id, '/whoadmin - —É–∑–Ω–∞—Ç—å –∫—Ç–æ –∞–¥–º–∏–Ω')
                await bot.send_message(message.from_user.id, '/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ')
                await bot.send_message(message.from_user.id, '/keyboard - –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞')
            else:
                await message.reply("–°–µ–π—á–∞—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é", reply_markup=kb.greet_kb1)
                await bot.send_message(message.from_user.id, '/whoadmin - —É–∑–Ω–∞—Ç—å –∫—Ç–æ –∞–¥–º–∏–Ω')
                await bot.send_message(message.from_user.id, '/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ')
                await bot.send_message(message.from_user.id, '/keyboard - –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞')
        if message.text == '–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å? ü§î':
            if message.from_user.id == admin_ip or admin1 > -1 and message.from_user.id == admin1:
                await message.reply("–Ø —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç, —Ä–∞—Å—Å—ã–ª–∞—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏—è :)", reply_markup=kb.markup3)
            else:
                await message.reply("–Ø —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç, —Ä–∞—Å—Å—ã–ª–∞—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏—è :)", reply_markup=kb.greet_kb1)
        if message.text == '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)':
            if message.from_user.id == admin_ip or admin1 > -1 and message.from_user.id == admin1:
                await message.reply("–ß–µ–º –∑–∞–π–º–µ–º—Å—è —Å–µ–≥–æ–¥–Ω—è?", reply_markup=kb.markup3)
            else:
                await message.reply("–í—ã –Ω–µ –∞–¥–º–∏–Ω", reply_markup=kb.greet_kb1)


@dp.message_handler(commands=['deleteadmin'])
async def start(message: types.Message):
    global admin1
    if message.chat.type == 'private':
        if message.from_user.id == admin_ip:
            text1 = message.text[13:]
            if int(admin1) == text1:
                await bot.send_message(message.from_user.id, text1 + ' –í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ –∏–∑ –∞–¥–º–∏–Ω–æ–≤')
                await bot.send_message(text1, '–í—ã —Ç–µ–ø–µ—Ä—å –Ω–µ –∞–¥–º–∏–Ω :(')


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
